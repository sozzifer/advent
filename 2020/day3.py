from itertools import chain, repeat
from math import prod

def ncycles(iterable, n):
    # Returns the sequence elements n times
    return chain.from_iterable(repeat(tuple(iterable), n))


ex_pattern = [
    "..##.......",
    "#...#...#..",
    ".#....#..#.",
    "..#.#...#.#",
    ".#...##..#.",
    "..#.##.....",
    ".#.#.#....#",
    ".#........#",
    "#.##...#...",
    "#...##....#",
    ".#..#...#.#",
]

ex_trees = [
    "..##.........##.........##.........##.........##.........##.......",
    "#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..",
    ".#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.",
    "..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#",
    ".#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.",
    "..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....",
    ".#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#",
    ".#........#.#........#.#........#.#........#.#........#.#........#",
    "#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...",
    "#...##....##...##....##...##....##...##....##...##....##...##....#",
    ".#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#",
]

ex_result = [
    "..##.........##.........##.........##.........##.........##.......",
    "#..O#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..",
    ".#....X..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.",
    "..#.#...#O#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#",
    ".#...##..#..X...##..#..#...##..#..#...##..#..#...##..#..#...##..#.",
    "..#.##.......#.X#.......#.##.......#.##.......#.##.......#.##.....",
    ".#.#.#....#.#.#.#.O..#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#",
    ".#........#.#........X.#........#.#........#.#........#.#........#",
    "#.##...#...#.##...#...#.X#...#...#.##...#...#.##...#...#.##...#...",
    "#...##....##...##....##...#X....##...##....##...##....##...##....#",
    ".#..#...#.#.#..#...#.#.#..#...X.#.#..#...#.#.#..#...#.#.#..#...#.#",
]

with open("2020/day3.txt") as f:
    data = f.read().splitlines()[1:]

def count_trees(pattern, right, down):
    width = ((len(pattern) * right) // len(pattern[0])) + 1
    repeats = ["".join([row] * width) for row in pattern]
    trees = 0
    i = down
    j = right
    for idx, row in enumerate(repeats):
        if i == 1:
            if row[j] == "#":
                trees += 1
            j += right
        elif i == 2:
            if row[j] == "#":
                if idx % 2 == 0:
                    trees += 1
            j += right
    return trees

slopes = [(1, 1), (3, 1), (5, 1), (7, 1), (1, 2)]
trees = []
for slope in slopes:
    trees.append(count_trees(ex_pattern, slope[0], slope[1]))
# higher than 3976910784
# example 2, 7, 3, 4, and 2 (336)
print(prod(trees))